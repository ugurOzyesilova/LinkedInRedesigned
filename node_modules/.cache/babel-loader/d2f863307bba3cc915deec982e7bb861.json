{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\UT\\\\vivid\\\\src\\\\statemanagement\\\\Context.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useReducer, useState, useContext, useEffect } from \"react\";\nimport Reducer from \"./Reducer\";\nimport firebase, { db, auth, provider } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  user: null\n};\nexport const Context = /*#__PURE__*/createContext(initialState); //GlobalContext\n\nexport const ContextProvider = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  //Global Provider\n  const [state, dispatch] = useReducer(Reducer, initialState);\n\n  const signIn = () => {\n    auth.signInWithPopup(provider).then(result => {\n      dispatch({\n        type: \"set__user\",\n        payload: result.user\n      }); //console.log(result.user)\n    }).catch(error => alert(error.message));\n  };\n\n  const [posts, setPosts] = useState([]);\n\n  const PostRendering = () => {\n    _s();\n\n    useEffect(() => {\n      db.collection(\"posts\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => setPosts(snapshot.docs.map(doc => {\n        return {\n          id: doc.id,\n          data: doc.data()\n        };\n      })));\n    }, []);\n  };\n\n  _s(PostRendering, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      signIn: signIn,\n      user: state.user,\n      PostRendering: PostRendering,\n      posts: posts\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ContextProvider, \"PTEDAmp4AG3ijIgj5ZBtgex4tUo=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/UT/vivid/src/statemanagement/Context.js"],"names":["React","createContext","useReducer","useState","useContext","useEffect","Reducer","firebase","db","auth","provider","initialState","user","Context","ContextProvider","props","state","dispatch","signIn","signInWithPopup","then","result","type","payload","catch","error","alert","message","posts","setPosts","PostRendering","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,EAAqDC,UAArD,EAAiEC,SAAjE,QAAiF,OAAjF;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,IAAkBC,EAAlB,EAAsBC,IAAtB,EAA4BC,QAA5B,QAA4C,aAA5C;;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAE;AADoB,CAArB;AAIP,OAAO,MAAMC,OAAO,gBAAGZ,aAAa,CAACU,YAAD,CAA7B,C,CAA6C;;AAEpD,OAAO,MAAMG,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AACxC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,UAAU,CAACI,OAAD,EAAUK,YAAV,CAApC;;AAEA,QAAMO,MAAM,GAAG,MAAM;AACnBT,IAAAA,IAAI,CACDU,eADH,CACmBT,QADnB,EAEGU,IAFH,CAESC,MAAD,IAAY;AAChBJ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAE,WADC;AAEPC,QAAAA,OAAO,EAAEF,MAAM,CAACT;AAFT,OAAD,CAAR,CADgB,CAKhB;AACD,KARH,EASGY,KATH,CASUC,KAAD,IAAWC,KAAK,CAACD,KAAK,CAACE,OAAP,CATzB;AAUD,GAXD;;AAcA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAM2B,aAAa,GAAG,MAAM;AAAA;;AAC1BzB,IAAAA,SAAS,CAAC,MAAM;AACdG,MAAAA,EAAE,CAACuB,UAAH,CAAc,OAAd,EACGC,OADH,CACW,WADX,EACwB,MADxB,EAEGC,UAFH,CAEeC,QAAD,IACVL,QAAQ,CACNK,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,GAAD,IAAS;AACzB,eAAO;AACLC,UAAAA,EAAE,EAAED,GAAG,CAACC,EADH;AAELC,UAAAA,IAAI,EAAEF,GAAG,CAACE,IAAJ;AAFD,SAAP;AAID,OALD,CADM,CAHZ;AAYD,KAbQ,EAaN,EAbM,CAAT;AAeD,GAhBD;;AApBwC,KAoBlCT,aApBkC;;AAuCxC,sBACE,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAEZ,MAAAA,MAAM,EAAEA,MAAV;AAAkBN,MAAAA,IAAI,EAAEI,KAAK,CAACJ,IAA9B;AAAoCkB,MAAAA,aAAa,EAAEA,aAAnD;AAAkEF,MAAAA,KAAK,EAACA;AAAxE,KAAzB;AAAA,cACGb,KAAK,CAACyB;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA5CM;;IAAM1B,e;;KAAAA,e","sourcesContent":["import React, { createContext, useReducer, useState, useContext, useEffect} from \"react\";\r\nimport Reducer from \"./Reducer\";\r\nimport firebase, {db, auth, provider } from \"../firebase\";\r\n\r\nexport const initialState = {\r\n  user: null,\r\n};\r\n\r\nexport const Context = createContext(initialState); //GlobalContext\r\n\r\nexport const ContextProvider = (props) => {\r\n  //Global Provider\r\n  const [state, dispatch] = useReducer(Reducer, initialState);\r\n\r\n  const signIn = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        dispatch({\r\n          type: \"set__user\",\r\n          payload: result.user,\r\n        });\r\n        //console.log(result.user)\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n\r\n  const [posts, setPosts] = useState([])\r\n\r\n  const PostRendering = () => {\r\n    useEffect(() => {\r\n      db.collection(\"posts\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshot) =>\r\n          setPosts(\r\n            snapshot.docs.map((doc) => {\r\n              return {\r\n                id: doc.id,\r\n                data: doc.data()\r\n              };\r\n            })\r\n          )\r\n        );\r\n    }, []);\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <Context.Provider value={{ signIn: signIn, user: state.user, PostRendering: PostRendering, posts:posts }}>\r\n      {props.children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}